// Generated from Segurate.g4 by ANTLR 4.13.2
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,17,252,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,1,0,1,0,1,
0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,
3,1,3,1,3,1,3,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,
5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,
6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,8,1,8,1,8,1,
8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,
8,1,8,1,8,1,8,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,
1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,
11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,
1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,
12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,
1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,
13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,5,14,232,8,14,
10,14,12,14,235,9,14,1,15,4,15,238,8,15,11,15,12,15,239,1,16,1,16,1,17,1,
17,1,18,4,18,247,8,18,11,18,12,18,248,1,18,1,18,0,0,19,1,1,3,2,5,3,7,4,9,
5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,0,35,
0,37,17,1,0,3,2,0,65,90,97,122,1,0,48,57,3,0,9,10,13,13,32,32,253,0,1,1,
0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,
0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,37,1,0,0,0,1,39,1,
0,0,0,3,45,1,0,0,0,5,47,1,0,0,0,7,54,1,0,0,0,9,63,1,0,0,0,11,65,1,0,0,0,
13,91,1,0,0,0,15,108,1,0,0,0,17,110,1,0,0,0,19,135,1,0,0,0,21,137,1,0,0,
0,23,155,1,0,0,0,25,181,1,0,0,0,27,202,1,0,0,0,29,228,1,0,0,0,31,237,1,0,
0,0,33,241,1,0,0,0,35,243,1,0,0,0,37,246,1,0,0,0,39,40,5,114,0,0,40,41,5,
101,0,0,41,42,5,103,0,0,42,43,5,108,0,0,43,44,5,97,0,0,44,2,1,0,0,0,45,46,
5,123,0,0,46,4,1,0,0,0,47,48,5,99,0,0,48,49,5,117,0,0,49,50,5,97,0,0,50,
51,5,110,0,0,51,52,5,100,0,0,52,53,5,111,0,0,53,6,1,0,0,0,54,55,5,101,0,
0,55,56,5,110,0,0,56,57,5,116,0,0,57,58,5,111,0,0,58,59,5,110,0,0,59,60,
5,99,0,0,60,61,5,101,0,0,61,62,5,115,0,0,62,8,1,0,0,0,63,64,5,125,0,0,64,
10,1,0,0,0,65,66,5,105,0,0,66,67,5,110,0,0,67,68,5,116,0,0,68,69,5,101,0,
0,69,70,5,110,0,0,70,71,5,116,0,0,71,72,5,111,0,0,72,73,5,65,0,0,73,74,5,
99,0,0,74,75,5,99,0,0,75,76,5,101,0,0,76,77,5,115,0,0,77,78,5,111,0,0,78,
79,5,70,0,0,79,80,5,117,0,0,80,81,5,101,0,0,81,82,5,114,0,0,82,83,5,97,0,
0,83,84,5,72,0,0,84,85,5,111,0,0,85,86,5,114,0,0,86,87,5,97,0,0,87,88,5,
114,0,0,88,89,5,105,0,0,89,90,5,111,0,0,90,12,1,0,0,0,91,92,5,105,0,0,92,
93,5,110,0,0,93,94,5,116,0,0,94,95,5,101,0,0,95,96,5,110,0,0,96,97,5,116,
0,0,97,98,5,111,0,0,98,99,5,115,0,0,99,100,5,70,0,0,100,101,5,97,0,0,101,
102,5,108,0,0,102,103,5,108,0,0,103,104,5,105,0,0,104,105,5,100,0,0,105,
106,5,111,0,0,106,107,5,115,0,0,107,14,1,0,0,0,108,109,5,62,0,0,109,16,1,
0,0,0,110,111,5,97,0,0,111,112,5,99,0,0,112,113,5,99,0,0,113,114,5,101,0,
0,114,115,5,115,0,0,115,116,5,111,0,0,116,117,5,65,0,0,117,118,5,82,0,0,
118,119,5,101,0,0,119,120,5,99,0,0,120,121,5,117,0,0,121,122,5,114,0,0,122,
123,5,115,0,0,123,124,5,111,0,0,124,125,5,115,0,0,125,126,5,83,0,0,126,127,
5,101,0,0,127,128,5,110,0,0,128,129,5,115,0,0,129,130,5,105,0,0,130,131,
5,98,0,0,131,132,5,108,0,0,132,133,5,101,0,0,133,134,5,115,0,0,134,18,1,
0,0,0,135,136,5,121,0,0,136,20,1,0,0,0,137,138,5,110,0,0,138,139,5,111,0,
0,139,140,5,69,0,0,140,141,5,115,0,0,141,142,5,65,0,0,142,143,5,100,0,0,
143,144,5,109,0,0,144,145,5,105,0,0,145,146,5,110,0,0,146,147,5,105,0,0,
147,148,5,115,0,0,148,149,5,116,0,0,149,150,5,114,0,0,150,151,5,97,0,0,151,
152,5,100,0,0,152,153,5,111,0,0,153,154,5,114,0,0,154,22,1,0,0,0,155,156,
5,97,0,0,156,157,5,103,0,0,157,158,5,114,0,0,158,159,5,101,0,0,159,160,5,
103,0,0,160,161,5,97,0,0,161,162,5,114,0,0,162,163,5,85,0,0,163,164,5,115,
0,0,164,165,5,117,0,0,165,166,5,97,0,0,166,167,5,114,0,0,167,168,5,105,0,
0,168,169,5,111,0,0,169,170,5,65,0,0,170,171,5,76,0,0,171,172,5,105,0,0,
172,173,5,115,0,0,173,174,5,116,0,0,174,175,5,97,0,0,175,176,5,78,0,0,176,
177,5,101,0,0,177,178,5,103,0,0,178,179,5,114,0,0,179,180,5,97,0,0,180,24,
1,0,0,0,181,182,5,97,0,0,182,183,5,103,0,0,183,184,5,114,0,0,184,185,5,101,
0,0,185,186,5,103,0,0,186,187,5,97,0,0,187,188,5,114,0,0,188,189,5,73,0,
0,189,190,5,80,0,0,190,191,5,65,0,0,191,192,5,76,0,0,192,193,5,105,0,0,193,
194,5,115,0,0,194,195,5,116,0,0,195,196,5,97,0,0,196,197,5,78,0,0,197,198,
5,101,0,0,198,199,5,103,0,0,199,200,5,114,0,0,200,201,5,97,0,0,201,26,1,
0,0,0,202,203,5,97,0,0,203,204,5,99,0,0,204,205,5,116,0,0,205,206,5,105,
0,0,206,207,5,118,0,0,207,208,5,97,0,0,208,209,5,114,0,0,209,210,5,77,0,
0,210,211,5,111,0,0,211,212,5,110,0,0,212,213,5,105,0,0,213,214,5,116,0,
0,214,215,5,111,0,0,215,216,5,114,0,0,216,217,5,101,0,0,217,218,5,111,0,
0,218,219,5,68,0,0,219,220,5,101,0,0,220,221,5,116,0,0,221,222,5,97,0,0,
222,223,5,108,0,0,223,224,5,108,0,0,224,225,5,97,0,0,225,226,5,100,0,0,226,
227,5,111,0,0,227,28,1,0,0,0,228,233,3,33,16,0,229,232,3,33,16,0,230,232,
3,35,17,0,231,229,1,0,0,0,231,230,1,0,0,0,232,235,1,0,0,0,233,231,1,0,0,
0,233,234,1,0,0,0,234,30,1,0,0,0,235,233,1,0,0,0,236,238,3,35,17,0,237,236,
1,0,0,0,238,239,1,0,0,0,239,237,1,0,0,0,239,240,1,0,0,0,240,32,1,0,0,0,241,
242,7,0,0,0,242,34,1,0,0,0,243,244,7,1,0,0,244,36,1,0,0,0,245,247,7,2,0,
0,246,245,1,0,0,0,247,248,1,0,0,0,248,246,1,0,0,0,248,249,1,0,0,0,249,250,
1,0,0,0,250,251,6,18,0,0,251,38,1,0,0,0,5,0,231,233,239,248,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class SegurateLexer extends antlr4.Lexer {

    static grammarFileName = "Segurate.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'regla'", "'{'", "'cuando'", "'entonces'", 
                         "'}'", "'intentoAccesoFueraHorario'", "'intentosFallidos'", 
                         "'>'", "'accesoARecursosSensibles'", "'y'", "'noEsAdministrador'", 
                         "'agregarUsuarioAListaNegra'", "'agregarIPAListaNegra'", 
                         "'activarMonitoreoDetallado'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, "AGREGAR_USUARIO", "AGREGAR_IP", 
                          "ACTIVAR_MONITOREO", "ID", "NUMERO", "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "AGREGAR_USUARIO", 
                      "AGREGAR_IP", "ACTIVAR_MONITOREO", "ID", "NUMERO", 
                      "LETRA", "DIGITO", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

SegurateLexer.EOF = antlr4.Token.EOF;
SegurateLexer.T__0 = 1;
SegurateLexer.T__1 = 2;
SegurateLexer.T__2 = 3;
SegurateLexer.T__3 = 4;
SegurateLexer.T__4 = 5;
SegurateLexer.T__5 = 6;
SegurateLexer.T__6 = 7;
SegurateLexer.T__7 = 8;
SegurateLexer.T__8 = 9;
SegurateLexer.T__9 = 10;
SegurateLexer.T__10 = 11;
SegurateLexer.AGREGAR_USUARIO = 12;
SegurateLexer.AGREGAR_IP = 13;
SegurateLexer.ACTIVAR_MONITOREO = 14;
SegurateLexer.ID = 15;
SegurateLexer.NUMERO = 16;
SegurateLexer.WS = 17;



